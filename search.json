[{"path":"/articles/Ukraine-GPP-analysis.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Ukraine GPP Analysis","text":"following script accompanies paper Wellington et al. (2022) explores crop production grain exports Ukraine. first vignette focuses trends crop production using Gross Primary Productivity (GPP).","code":""},{"path":[]},{"path":"/articles/Ukraine-GPP-analysis.html","id":"reading-in-relevant-datasets","dir":"Articles","previous_headings":"","what":"Reading in relevant datasets","title":"Ukraine GPP Analysis","text":"load GPP data clipped Ukraine load relevant shape file. datasets also available /data /inst/extdata directories can read using readRDS st_read commands respectively.","code":"library(UkraineCrops)  data(GPP_mod_df) data(Ukr_bnds) data(Ukr_FAOSTAT)"},{"path":"/articles/Ukraine-GPP-analysis.html","id":"fitting-the-generalised-additive-model-gam","dir":"Articles","previous_headings":"","what":"Fitting the Generalised Additive Model (GAM)","title":"Ukraine GPP Analysis","text":"fit Generalised Additive Model (GAM) (Wood 2006) assuming Gaussian distribution response variable, NPP include smooth terms year, season, space relevant interactions, consist season within year, space time. add factor inv allows us investigate pre post invasion effect. also explore GAM structure fits term reflecting pre (2012-21) post war (2022) periods. term refer war represents binary variable 1 indicates year 2022 war began. now fit model using mgcv package R store results. accommodate temporal dependencies fit correlation term model result iterative process outlined Wood et al. (2017). final model fit invasion model presented extract effect direction size.","code":"all_f <- GPP ~     # smooth term for year   s(year, bs=\"cr\", k=12) +    # cyclic term for season   s(month, bs=\"cc\", k=12) +     # smooth term for space   s(x,y, bs='gp', k=50)  +                   # seasonal within year   ti(month, year, bs = c(\"cc\", \"cr\"), k = c(12,12)) +     # space x time   ti(x, y, year, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,13), m=list(2, NA)) all_f_war <- GPP ~     # smooth term for year   war +    # cyclic term for season   s(month, bs=\"cc\", k=12, by=war) +     # smooth term for space   s(x,y, bs='gp', k=50, by=war) +   # space x time   ti(x, y, month, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,12), m=list(2, NA), by=war) # Run GAMs for large datasets all_gam <- bam(all_f, data=GPP_mod_df, discrete=TRUE, nthreads=8, rho=0.8) all_gam_war <- bam(all_f_war, data=GPP_mod_df, discrete=TRUE, nthreads=8, rho=0.6) # Output shows effect of the invasion period on cropland GPP summary(all_gam_war) ##  ## Family: gaussian  ## Link function: identity  ##  ## Formula: ## GPP ~ war + s(month, bs = \"cc\", k = 12, by = war) + s(x, y, bs = \"gp\",  ##     k = 50, by = war) + ti(x, y, month, d = c(2, 1), bs = c(\"gp\",  ##     \"cr\"), k = c(50, 12), m = list(2, NA), by = war) ##  ## Parametric coefficients: ##                   Estimate Std. Error  t value Pr(>|t|)     ## (Intercept)      191.09964    0.09465 2018.918  < 2e-16 *** ## warPost-invasion  -2.47161    0.41756   -5.919 3.24e-09 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##                                    edf Ref.df         F p-value     ## s(month):warPre-invasion         9.998  10.00 388543.14  <2e-16 *** ## s(month):warPost-invasion        9.987  10.00  30197.84  <2e-16 *** ## s(x,y):warPre-invasion          48.530  48.92   3377.65  <2e-16 *** ## s(x,y):warPost-invasion         44.607  45.92     22.75  <2e-16 *** ## ti(month,x,y):warPre-invasion  490.729 519.96    630.80  <2e-16 *** ## ti(month,x,y):warPost-invasion 366.474 419.60     86.94  <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.862   Deviance explained = 86.2% ## fREML = 6.5967e+06  Scale est. = 2477.9    n = 1292171"},{"path":"/articles/Ukraine-GPP-analysis.html","id":"model-checking","dir":"Articles","previous_headings":"","what":"Model Checking","title":"Ukraine GPP Analysis","text":"examine fit model check temporal spatial autocorrelation residuals. diagnostics examined sufficiently account correlation data given model structure.","code":"# Temporal autocorrelation plot check_resid(all_gam, ask=FALSE) # Variogram for spatial autocorrelation resids <- residuals.gam(all_gam) data_pred <- data.frame(resids = resids, long = GPP_mod_df$x, lat = GPP_mod_df$y) coordinates(data_pred) <- ~long+lat # Select a sample for compute efficiency   var_plot <- variogram (resids ~ 1, data = data_pred[sample(1:nrow(data_pred), 10000),])   plot(var_plot)"},{"path":"/articles/Ukraine-GPP-analysis.html","id":"investigating-trends-and-agreement-with-ground-data","dir":"Articles","previous_headings":"","what":"Investigating trends and agreement with ground data","title":"Ukraine GPP Analysis","text":"generate summed effect year plot, extract data , pass ggplot2 object.  also generate bar plot showing total crop production tonnage Ukraine 2010 2020 crops comprising . data taken FAOSAT database. format final plot, ’ll perform correlation test check agreement total crop production FAOSTAT data NPP model. First , extract prediction terms year effect GAM. ’ll also summarise crop production data create dataframe prior correlation test. Let’s inspect relationship see linear formally conducting test.  Check columns normality conduct correlation test. Finally, can plot summed effect year alongside real production data.","code":"Ukr_year_smplot <- plot_smooth(all_gam, view='year', rm.ranef = F) ## Summary: ##  * year : numeric predictor; with 30 values ranging from 2010.000000 to 2022.000000.  ##  * month : numeric predictor; set to the value(s): 7.  ##  * x : numeric predictor; set to the value(s): 31.7105295.  ##  * y : numeric predictor; set to the value(s): 48.9581829. Ukr_year_sm_ggplot <- ggplot() + geom_line(aes(y=Ukr_year_smplot$fv$fit,                                            x=Ukr_year_smplot$fv$year)) +   geom_ribbon(aes(x=Ukr_year_smplot$fv$year,                    ymax= Ukr_year_smplot$fv$ul, ymin=Ukr_year_smplot$fv$ll), alpha=0.2) +   scale_x_continuous(breaks=seq(2010,2022,1), limits = c(2009.5,2022)) + theme_bw() + ylim(c(0,550)) +    labs(x=\"Year\", y=bquote('GPP'~(kgC/m^2))) Ukr_grain_dat <- Ukr_FAOSTAT %>% filter(Element == \"Production\") Ukr_real_grain <- ggplot() + geom_bar(data=Ukr_grain_dat, aes(fill=Item, y=Value, x=Year),                                       position=\"stack\", stat=\"identity\") + scale_fill_npg() +   theme_bw() + labs(fill='Crop Type', y= 'Total tonnes produced') +    scale_y_continuous(labels = unit_format(unit = \"M\", scale = 1e-6)) +   scale_x_continuous(breaks=seq(2010,2022, 1), limit=c(2009.5, 2022)) Ukr_annual_preds_terms <- predict(all_gam, type=\"iterms\",  ## Predict without new data                                  se.fit=TRUE)  head(Ukr_annual_preds_terms$fit) ##     s(year)  s(month)    s(x,y) ti(month,year) ti(year,x,y) ## 1 -7.233708 -166.1777 -14.68356       16.45004   -27.265129 ## 2 -7.233708 -166.1777 -14.02574       16.45004   -23.444105 ## 3 -7.233708 -166.1777 -10.00935       16.45004    -7.011057 ## 4 -7.233708 -166.1777 -10.42145       16.45004    -9.392004 ## 5 -7.233708 -166.1777 -10.69893       16.45004   -11.056382 ## 6 -7.233708 -166.1777 -14.63295       16.45004   -18.297377 Ukr_annual_preds_fit <- as.data.frame(Ukr_annual_preds_terms$fit) Ukr_annual_preds_fit$year <- GPP_mod_df$year names(Ukr_annual_preds_fit) <- c('year_hat', 'month_hat', 'space_hat', 'yxm_hat', 'yxs_hat', 'year')  Ukr_annual_terms <- Ukr_annual_preds_fit %>% group_by(year) %>%    summarise(year_term=mean(year_hat)) %>% filter(year<2021) Ukr_grainprod_annual <- Ukr_grain_dat %>% group_by(Year) %>% filter(Element ==\"Production\") %>%    summarise(tonnes=sum(Value))  Ukr_corr_df <- bind_cols(Ukr_grainprod_annual$tonnes, Ukr_annual_terms$year_term) ## New names: ## • `` -> `...1` ## • `` -> `...2` names(Ukr_corr_df) <- c(\"RealTonnes\", \"YearTerms\") ggscatter(data = Ukr_corr_df, x = 'YearTerms', y = 'RealTonnes',            add = \"reg.line\", conf.int = TRUE,            cor.coef = TRUE, cor.method = \"pearson\",           xlab = \"Predicted GPP term\", ylab = \"Real T crop produced\") ## `geom_smooth()` using formula 'y ~ x' shapiro.test(Ukr_grainprod_annual$tonnes) ##  ##  Shapiro-Wilk normality test ##  ## data:  Ukr_grainprod_annual$tonnes ## W = 0.91013, p-value = 0.2447 shapiro.test(Ukr_annual_terms$year_term) ##  ##  Shapiro-Wilk normality test ##  ## data:  Ukr_annual_terms$year_term ## W = 0.93534, p-value = 0.4674 cor.test(Ukr_grainprod_annual$tonnes, Ukr_annual_terms$year_term, method=\"pearson\", alternative=\"greater\") ##  ##  Pearson's product-moment correlation ##  ## data:  Ukr_grainprod_annual$tonnes and Ukr_annual_terms$year_term ## t = 2.7352, df = 9, p-value = 0.01151 ## alternative hypothesis: true correlation is greater than 0 ## 95 percent confidence interval: ##  0.2317292 1.0000000 ## sample estimates: ##       cor  ## 0.6737394 Ukr_realagree <- ggarrange(Ukr_year_sm_ggplot,Ukr_real_grain,            labels = NULL,           ncol = 1, nrow = 2,           common.legend = TRUE, legend = \"bottom\",           align = \"hv\",           font.label = list(size = 10, color = \"black\", face = \"bold\", family = NULL, position = \"top\")) Ukr_realagree"},{"path":"/articles/Ukraine-GPP-analysis.html","id":"monthly-effect-and-crop-calendar","dir":"Articles","previous_headings":"Investigating trends and agreement with ground data","what":"Monthly effect and crop calendar","title":"Ukraine GPP Analysis","text":"’d also like inspect effect month cropland NPP pre post invasion. can plot_smooth function . code chunk also produces crop calendar adapted UN FAO GIEWS Factsheet.  Now can combine plots.","code":"month_war_plot <- plot_smooth(all_gam_war, view=\"month\",plot_all=\"war\", rm.ranef = F) ## Summary: ##  * war : factor; set to the value(s): Post-invasion, Pre-invasion.  ##  * month : numeric predictor; with 30 values ranging from 1.000000 to 12.000000.  ##  * x : numeric predictor; set to the value(s): 31.7105295.  ##  * y : numeric predictor; set to the value(s): 48.9581829. month_war_plot_dat <- month_war_plot$fv %>% select(war, month, fit, ll, ul) %>%    filter(war==\"Pre-invasion\" | month<12&month>2.8) month_war_plot_dat$month_abb <- month.abb[month_war_plot_dat$month]  month_comp_plot <- ggplot(data=month_war_plot_dat) + geom_line(aes(x=month, y=fit, col=war)) +   geom_ribbon(aes(ymin=ll, ymax=ul, x=month, fill=war), alpha=0.2) + theme_bw() +   scale_x_continuous(breaks = 1:12,          labels = c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')) +   labs(y=bquote('NPP'~(kgC/m^2)), x='Month') +   theme(legend.title=element_blank()) + scale_fill_npg()  colors <- c(\"Sowing\" = \"brown\", \"Growing\" = \"darkgreen\", \"Harvest\" = \"orange\")  Ukr_crop_cal <- ggplot() +   geom_linerange(aes(x= \"Winter Cereals\", ymin=as.Date(\"2013-01-01\"), ymax=as.Date(\"2013-06-30\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Winter Cereals\", ymin=as.Date(\"2013-06-30\"), ymax=as.Date(\"2013-08-20\"), color=\"Harvest\"), size=5) +   geom_linerange(aes(x= \"Winter Cereals\", ymin=as.Date(\"2013-09-01\"), ymax=as.Date(\"2013-10-30\"), color=\"Sowing\"), size=5) +   geom_linerange(aes(x= \"Winter Cereals\", ymin=as.Date(\"2013-10-30\"), ymax=as.Date(\"2013-12-31\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Maize\", ymin=as.Date(\"2013-05-01\"), ymax=as.Date(\"2013-06-10\"), color=\"Sowing\"), size=5) +   geom_linerange(aes(x= \"Maize\", ymin=as.Date(\"2013-06-10\"), ymax=as.Date(\"2013-10-01\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Maize\", ymin=as.Date(\"2013-10-01\"), ymax=as.Date(\"2013-11-30\"), color=\"Harvest\"), size=5) +   geom_linerange(aes(x= \"Sunflower\", ymin=as.Date(\"2013-04-01\"), ymax=as.Date(\"2013-06-01\"), color=\"Sowing\"), size=5) +   geom_linerange(aes(x= \"Sunflower\", ymin=as.Date(\"2013-06-01\"), ymax=as.Date(\"2013-08-31\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Sunflower\", ymin=as.Date(\"2013-08-31\"), ymax=as.Date(\"2013-10-30\"), color=\"Harvest\"), size=5) +   geom_linerange(aes(x= \"Rapeseed\", ymin=as.Date(\"2013-01-01\"), ymax=as.Date(\"2013-06-30\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Rapeseed\", ymin=as.Date(\"2013-06-30\"), ymax=as.Date(\"2013-08-31\"), color=\"Harvest\"), size=5) +   geom_linerange(aes(x= \"Rapeseed\", ymin=as.Date(\"2013-08-31\"), ymax=as.Date(\"2013-10-01\"), color=\"Sowing\"), size=5) +   geom_linerange(aes(x= \"Rapeseed\", ymin=as.Date(\"2013-10-01\"), ymax=as.Date(\"2013-12-31\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Potatoes\", ymin=as.Date(\"2013-04-01\"), ymax=as.Date(\"2013-06-01\"), color=\"Sowing\"), size=5) +   geom_linerange(aes(x= \"Potatoes\", ymin=as.Date(\"2013-06-01\"), ymax=as.Date(\"2013-09-01\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Potatoes\", ymin=as.Date(\"2013-09-01\"), ymax=as.Date(\"2013-10-31\"), color=\"Harvest\"), size=5) +   coord_flip() +  scale_y_date(lim = c(as.Date(\"2013-01-01\"), as.Date(\"2013-12-31\")),breaks=date_breaks(width = \"1 month\"), labels = date_format(\"%b\"))+   labs(x=\"\", y=\"Month\") + theme_bw()+ scale_color_manual(values = colors) + theme(legend.title=element_blank()) Ukr_cropplots <- ggdraw() +   draw_plot(month_comp_plot, x=0.075, y=0.5, width=0.91, height=0.5) +   draw_plot(Ukr_crop_cal, x=0, y=0, width=1, height=0.5)+   theme(plot.background = element_rect(fill=\"white\", color = NA)) Ukr_cropplots"},{"path":"/articles/Ukraine-GPP-analysis.html","id":"generate-a-spatial-plot-with-uncertainty","dir":"Articles","previous_headings":"","what":"Generate a spatial plot with uncertainty","title":"Ukraine GPP Analysis","text":"use Vizumap package compare distribution NPP pre post invasion visualise uncertainty associated estimate (Lucchesi, 2021). First, extract data GAMs.   Next, use Vizumap functions build palette colour key.  Finally, can build Vizumap plot.","code":"space_nowar <- fvisgam(all_gam_war, view = c(\"x\", \"y\"),                         cond = list(war = \"Pre-invasion\"),                        main = \"Pre-invasion\", rm.ranef = T,                        n.grid=100,                        too.far=0.01) ## Summary: ##  * war : factor; set to the value(s): Pre-invasion.  ##  * month : numeric predictor; set to the value(s): 7.  ##  * x : numeric predictor; with 100 values ranging from 22.188388 to 40.154693.  ##  * y : numeric predictor; with 100 values ranging from 44.466606 to 52.371781.  ##  * NOTE : The following random effects columns are canceled: s(month):warPre-invasion,s(month):warPost-invasion ## # Extract data for plotting spatial term  space_nowar_dat <- space_nowar$fv space_nowar_dat$SE <- space_nowar_dat$CI/1.96  # Rpt for war space_war <- fvisgam(all_gam_war, view = c(\"x\", \"y\"),                         cond = list(war = \"Post-invasion\"),                        main = \"Post-invasion\", rm.ranef = T,                        n.grid=100,                        too.far=0.01) ## Summary: ##  * war : factor; set to the value(s): Post-invasion.  ##  * month : numeric predictor; set to the value(s): 7.  ##  * x : numeric predictor; with 100 values ranging from 22.188388 to 40.154693.  ##  * y : numeric predictor; with 100 values ranging from 44.466606 to 52.371781.  ##  * NOTE : The following random effects columns are canceled: s(month):warPre-invasion,s(month):warPost-invasion ## # Extract data for plotting spatial term space_war_dat <- space_war$fv space_war_dat$SE <- space_war_dat$CI/1.96 # Create palette gpp_pal <- build_palette(name = \"usr\",                            colrange = list(colour = c(\"chartreuse4\", \"darkblue\"),                                            difC = c(3, 4))) view(gpp_pal) # creating df for Vizumap plotting space_gpp_dat <- bind_rows(space_nowar_dat, space_war_dat) gpp_war_df <- read.uv(data = space_gpp_dat, estimate = \"fit\",                         error = \"SE\") names(gpp_war_df)[c(1, 5,6)] <- c(\"Estimate\", \"long\", \"lat\")  # build key UKey <- build_bkey(data = gpp_war_df, terciles = T, palette = gpp_pal) k <- view(UKey)    nppBivMap <- build_bmap(data = gpp_war_df, terciles = T,                             palette = gpp_pal) obj <- nppBivMap obj_cropped <- exclude.too.far(obj$output_data$long, obj$output_data$lat,                                 GPP_mod_df$x, GPP_mod_df$y, dist=0.015)  m <- ggplot() +      geom_raster(data = obj$output_data[!obj_cropped,],                  aes(x = long, y = lat, fill = hex_code)) +     facet_wrap(~war, nrow=2) + scale_fill_identity() + coord_quickmap() +       xlab(\"\") + ylab(\"\") + geom_sf(data=Ukr_bnds, alpha=0) + theme_bw() ## Coordinate system already present. Adding new coordinate system, which will replace the existing one. mk <- ggdraw() +   draw_plot(m, x=0, y=0, width=0.6, height=1) +   draw_plot(k, x=0.6, y=0, width = 0.4, height=1)+   theme(plot.background = element_rect(fill=\"white\", color = NA)) mk"},{"path":"/articles/Ukraine-GPP-analysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Ukraine GPP Analysis","text":"Lucchesi, L., Kuhnert, P., Wikle, C. (2021). Vizumap: R package visualising uncertainty spatial data. Journal Open Source Software, 6(59), 2409, https://doi.org/10.21105/joss.02409 Wellington, M., Lawes, R., Kuhnert, P. (2022) Rapid monitoring crop growth, grain exports, fire patterns Ukraine. Wood, S. N., Li, Z., Shaddick, G. & Augustin, N. H. (2017) Generalized Additive Models Gigadata: Modeling U.K. Black 166 Smoke Network Daily Data. J. . Stat. Assoc. 112, 1199–1210, DOI: 10.1080/01621459.2016.1195744. Wood, S. N., Li, Z., Shaddick, G. & Augustin, N. H. (2017) Generalized Additive Models Gigadata: Modeling U.K. Black 166 Smoke Network Daily Data. J. . Stat. Assoc. 112, 1199–1210, DOI: 10.1080/01621459.2016.1195744. Wood, S. N. (2006) Generalized additive models: introduction R, Chapman Hall/CRC.","code":""},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Ukraine NDVI Analysis","text":"following script accompanies paper Wellington et al. (2022) explores crop growth, grain exports fire patterns Ukraine. first vignette focuses trends crop growth using NDVI.","code":""},{"path":[]},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"reading-in-relevant-datasets","dir":"Articles","previous_headings":"","what":"Reading in relevant datasets","title":"Ukraine NDVI Analysis","text":"load NDVI data clipped Ukraine load relevant shape file. datasets also available /data /inst/extdata directories can read using readRDS st_read commands respectively.","code":"library(UkraineCrops)  data(NDVI_mod_df) data(Ukr_bnds)"},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"creating-a-pre-and-post-invasion-term","dir":"Articles","previous_headings":"","what":"Creating a pre and post-invasion term","title":"Ukraine NDVI Analysis","text":"NDVI_mod_df includes war term pre post 2022 calendar years also need create pre post-invasion term reflected date invasion (24th February 2022).","code":"# Allocate factor for invasion NDVI_mod_df$inv <- as.factor(if_else(NDVI_mod_df$date < '2022-02-24', \"0\", \"1\"))"},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"fitting-the-generalised-additive-model-gam","dir":"Articles","previous_headings":"","what":"Fitting the Generalised Additive Model (GAM)","title":"Ukraine NDVI Analysis","text":"fit Generalised Additive Model (GAM) (Wood 2006) assuming Gaussian distribution response variable, NDVI include smooth terms year, season, space relevant interactions, consist season within year, space time. add factor inv allows us investigate pre post invasion effect. also explore GAM structure fits term reflecting pre (2012-21) post war (2022) periods. term refer war represents binary variable 1 indicates year 2022 war began. now fit model using mgcv package R store results. accommodate temporal dependencies fit correlation term model result iterative process outlined Wood et al. (2017). final model fits presented . model takes minutes run.","code":"# Setting up the GAM structure with key smoothers for trend terms all_f <- NDVI ~     # smooth term for year   s(year, bs=\"cr\", k=11) +    # cyclic term for season   s(month, bs=\"cc\", k=12) +     # smooth term for space   s(x,y, bs='gp', k=50)  +               # seasonal within year   ti(month, year, bs = c(\"cc\", \"cr\"), k = c(12,11)) +     # space x time   ti(x, y, year, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,11), m=list(2, NA)) # Setting up the GAM structure with an added term reflecting # the start of the invasion all_f_inv <- NDVI ~     # factor for pre/ post-invasion   inv +    # cyclic term for season   s(month, bs=\"cc\", k=12, by=inv) +     # smooth term for space   s(x,y, bs='gp', k=50, by=inv) +   # space x time   ti(x, y, month, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,12), m=list(2, NA), by=inv) all_f_war <- NDVI ~     # factor for pre/ post-2022   war +    # cyclic term for season   s(month, bs=\"cc\", k=12, by=war) +     # smooth term for space   s(x,y, bs='gp', k=50, by=war) +   # space x time   ti(x, y, month, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,12), m=list(2, NA), by=war) # Run GAMs for large datasets all_gam <- bam(all_f, data=NDVI_mod_df, discrete=TRUE, nthreads=8, rho=0.8) all_gam_war <- bam(all_f_war, data=NDVI_mod_df, discrete=TRUE, nthreads=8, rho=0.6) all_gam_inv <- bam(all_f_inv, data=NDVI_mod_df, discrete=TRUE, nthreads=8, rho=0.6)  # Output shows effect of the invasion on cropland NDVI summary(all_gam_inv) ##  ## Family: gaussian  ## Link function: identity  ##  ## Formula: ## NDVI ~ inv + s(month, bs = \"cc\", k = 12, by = inv) + s(x, y,  ##     bs = \"gp\", k = 50, by = inv) + ti(x, y, month, d = c(2, 1),  ##     bs = c(\"gp\", \"cr\"), k = c(50, 12), m = list(2, NA), by = inv) ##  ## Parametric coefficients: ##             Estimate Std. Error  t value Pr(>|t|)     ## (Intercept) 4378.975      2.932 1493.446   <2e-16 *** ## inv1         -11.099    982.597   -0.011    0.991     ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##                        edf Ref.df         F  p-value     ## s(month):inv0        9.990  10.00 33993.699  < 2e-16 *** ## s(month):inv1        2.983   4.00  1617.662  < 2e-16 *** ## s(x,y):inv0         48.260  48.83  1412.879  < 2e-16 *** ## s(x,y):inv1         33.003  36.09     1.967 0.000487 *** ## ti(month,x,y):inv0 376.214 429.05   127.888  < 2e-16 *** ## ti(month,x,y):inv1  55.979  72.09     8.046  < 2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.716   Deviance explained = 71.6% ## fREML = 3.0937e+06  Scale est. = 7.7897e+05  n = 387617"},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"model-checking","dir":"Articles","previous_headings":"","what":"Model Checking","title":"Ukraine NDVI Analysis","text":"examine fit model check temporal spatial autocorrelation residuals. diagnostics examined sufficiently account correlation data given model structure.","code":"# Temporal autocorrelation plot check_resid(all_gam, ask=FALSE) # Variogram for spatial autocorrelation resids <- residuals.gam(all_gam) data_pred <- data.frame(resids = resids, long = NDVI_mod_df$x, lat = NDVI_mod_df$y) coordinates(data_pred) <- ~long+lat # Select a sample for compute efficiency   var_plot <- variogram (resids ~ 1, data = data_pred[sample(1:nrow(data_pred), 10000),])   plot(var_plot)"},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"investigating-key-trends","dir":"Articles","previous_headings":"","what":"Investigating Key Trends","title":"Ukraine NDVI Analysis","text":"obtain NDVI predictions model produce maps comparing baseline period 2012-2021 (top row) 2022 (bottom row) per Figure 2 Wellington et al. (2022). (Note takes minutes run)  plot partial effect year cropland NDVI Ukrain shaded ribbon denoting plus/minus standard error estimate.","code":"# Get predictions for plotting all_gam_war_pred <- predict(all_gam_war, se=TRUE)  all_gam_war_pred_df <- data.frame(pred = all_gam_war_pred$fit,                                   pred_se = all_gam_war_pred$se.fit,                                   x = NDVI_mod_df$x,                                   y= NDVI_mod_df$y,                                   year = NDVI_mod_df$year,                                   month = NDVI_mod_df$month,                                   war=NDVI_mod_df$war)   # Filter to current time period to allow comparison of baseline to 2022 all_gam_war_pred_space_df <- all_gam_war_pred_df %>% filter(month < 7)  # Space plot by month space_month_year_plot <- ggplot(data=all_gam_war_pred_space_df) + geom_tile(aes(x=x, y=y, fill=pred)) +    geom_contour(aes(x=x, y=y, z=pred, col=\"red\"), )  + theme_bw() + facet_grid(war~month) +   scale_fill_viridis_c(name='NDVI') + coord_equal() +   labs(x='Longitude', y='Latitude') + guides(alpha=\"none\", colour=\"none\") + geom_sf(data=Ukr_bnds, alpha=0) +   theme(legend.key.size = unit(1, 'cm'), legend.position = \"bottom\") ## Coordinate system already present. Adding new coordinate system, which will replace the existing one. space_month_year_plot # Plot partial effect of year all_gam_viz <- getViz(all_gam)  all_gam_year_plot_dat <- plot(sm(all_gam_viz, 1))$data$fit  Ukr_year_plot <- ggplot(data = all_gam_year_plot_dat) +    geom_line(aes(x = x, y = y)) +   geom_ribbon(aes(x = x, ymin = y-se, ymax = y+se), alpha = 0.2) +    theme_bw() +   scale_x_continuous(breaks = seq(2012, 2022,1)) +   labs(y = \"NDVI\", x = \"Year\")  Ukr_year_plot"},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Ukraine NDVI Analysis","text":"Wellington, M., Lawes, R., Kuhnert, P. (2022) Rapid monitoring crop growth, grain exports, fire patterns Ukraine, Nature Food, Review. Wood, S. N., Li, Z., Shaddick, G. & Augustin, N. H. (2017) Generalized Additive Models Gigadata: Modeling U.K. Black 166 Smoke Network Daily Data. J. . Stat. Assoc. 112, 1199–1210, DOI: 10.1080/01621459.2016.1195744. Wood, S. N. (2006) Generalized additive models: introduction R, Chapman Hall/CRC.","code":""},{"path":"/articles/Ukraine-NPP-analysis.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Ukraine NPP Analysis","text":"following script accompanies paper Wellington et al. (2022) explores crop production grain exports Ukraine. first vignette focuses trends crop production using Net Primary Productivity (NPP).","code":""},{"path":[]},{"path":"/articles/Ukraine-NPP-analysis.html","id":"reading-in-relevant-datasets","dir":"Articles","previous_headings":"","what":"Reading in relevant datasets","title":"Ukraine NPP Analysis","text":"load NPP data clipped Ukraine load relevant shape file. datasets also available /data /inst/extdata directories can read using readRDS st_read commands respectively.","code":"library(UkraineCrops)  data(NPP_mod_df) data(Ukr_bnds) data(Ukr_FAOSTAT)"},{"path":"/articles/Ukraine-NPP-analysis.html","id":"fitting-the-generalised-additive-model-gam","dir":"Articles","previous_headings":"","what":"Fitting the Generalised Additive Model (GAM)","title":"Ukraine NPP Analysis","text":"fit Generalised Additive Model (GAM) (Wood 2006) assuming Gaussian distribution response variable, NPP include smooth terms year, season, space relevant interactions, consist season within year, space time. add factor inv allows us investigate pre post invasion effect. also explore GAM structure fits term reflecting pre (2012-21) post war (2022) periods. term refer war represents binary variable 1 indicates year 2022 war began. now fit model using mgcv package R store results. accommodate temporal dependencies fit correlation term model result iterative process outlined Wood et al. (2017). final model fit invasion model presented extract effect direction size.","code":"all_f <- NPP ~     # smooth term for year   s(year, bs=\"cr\", k=13) +    # cyclic term for season   s(month, bs=\"cc\", k=12) +     # smooth term for space   s(x,y, bs='gp', k=50)  +                   # seasonal within year   ti(month, year, bs = c(\"cc\", \"cr\"), k = c(12,11)) +     # space x time   ti(x, y, year, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,11), m=list(2, NA)) all_f_war <- NPP ~     # smooth term for year   war +    # cyclic term for season   s(month, bs=\"cc\", k=12, by=war) +     # smooth term for space   s(x,y, bs='gp', k=50, by=war) +   # space x time   ti(x, y, month, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,12), m=list(2, NA), by=war) all_f_war <- NPP ~     # smooth term for year   war +    # cyclic term for season   s(month, bs=\"cc\", k=12, by=war) +     # smooth term for space   s(x,y, bs='gp', k=50, by=war) +   # space x time   ti(x, y, month, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,12), m=list(2, NA), by=war) # Run GAMs for large datasets all_gam <- bam(all_f, data=npp_mod_df, discrete=TRUE, nthreads=8, rho=0.8) all_gam_war <- bam(all_f_war, data=npp_mod_df, discrete=TRUE, nthreads=8, rho=0.6) # Output shows effect of the invasion on cropland NPP summary(all_gam_war) ##  ## Family: gaussian  ## Link function: identity  ##  ## Formula: ## NPP ~ war + s(month, bs = \"cc\", k = 12, by = war) + s(x, y, bs = \"gp\",  ##     k = 50, by = war) + ti(x, y, month, d = c(2, 1), bs = c(\"gp\",  ##     \"cr\"), k = c(50, 12), m = list(2, NA), by = war) ##  ## Parametric coefficients: ##                   Estimate Std. Error  t value Pr(>|t|)     ## (Intercept)      128.64673    0.09257 1389.780   <2e-16 *** ## warPost-invasion   8.74608   30.84583    0.284    0.777     ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##                                    edf Ref.df         F p-value     ## s(month):warPre-invasion         9.997  10.00 1.931e+05  <2e-16 *** ## s(month):warPost-invasion        5.994   6.00 1.737e+04  <2e-16 *** ## s(x,y):warPre-invasion          48.681  48.96 1.621e+03  <2e-16 *** ## s(x,y):warPost-invasion         39.109  40.70 4.709e+00  <2e-16 *** ## ti(month,x,y):warPre-invasion  479.596 513.58 3.247e+02  <2e-16 *** ## ti(month,x,y):warPost-invasion 231.968 264.69 6.274e+01  <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.824   Deviance explained = 82.4% ## fREML = 3.9609e+06  Scale est. = 1552      n = 813008"},{"path":"/articles/Ukraine-NPP-analysis.html","id":"model-checking","dir":"Articles","previous_headings":"","what":"Model Checking","title":"Ukraine NPP Analysis","text":"examine fit model check temporal spatial autocorrelation residuals. diagnostics examined sufficiently account correlation data given model structure.","code":"# Temporal autocorrelation plot check_resid(all_gam, ask=FALSE) # Variogram for spatial autocorrelation resids <- residuals.gam(all_gam) data_pred <- data.frame(resids = resids, long = npp_mod_df$x, lat = npp_mod_df$y) coordinates(data_pred) <- ~long+lat # Select a sample for compute efficiency   var_plot <- variogram (resids ~ 1, data = data_pred[sample(1:nrow(data_pred), 10000),])   plot(var_plot)"},{"path":"/articles/Ukraine-NPP-analysis.html","id":"investigating-trends-and-agreement-with-ground-data","dir":"Articles","previous_headings":"","what":"Investigating trends and agreement with ground data","title":"Ukraine NPP Analysis","text":"generate summed effect year plot, extract data , pass ggplot2 object.  also generate bar plot showing total crop production tonnage Ukraine 2010 2020 crops comprising . data taken FAOSAT database. format final plot, ’ll perform correlation test check agreement total crop production FAOSTAT data NPP model. First , extract prediction terms year effect GAM. ’ll also summarise crop production data create dataframe prior correlation test. Let’s inspect relationship see linear formally conducting test.  Check columns normality conduct correlation test. Finally, can plot summed effect year alongside real production data.","code":"Ukr_year_smplot <- plot_smooth(all_gam, view='year', rm.ranef = F) ## Summary: ##  * year : numeric predictor; with 30 values ranging from 2010.000000 to 2022.000000.  ##  * month : numeric predictor; set to the value(s): 7.  ##  * x : numeric predictor; set to the value(s): 31.7779031.  ##  * y : numeric predictor; set to the value(s): 49.0704723. Ukr_year_sm_ggplot <- ggplot() + geom_line(aes(y=Ukr_year_smplot$fv$fit,                                            x=Ukr_year_smplot$fv$year)) +   geom_ribbon(aes(x=Ukr_year_smplot$fv$year,                    ymax= Ukr_year_smplot$fv$ul, ymin=Ukr_year_smplot$fv$ll), alpha=0.2) +   scale_x_continuous(breaks=seq(2010,2022,1), limits = c(2009.5,2022)) + theme_bw() + ylim(c(0,330)) +    labs(x=\"Year\", y=bquote('NPP'~(kgC/m^2))) Ukr_grain_dat <- Ukr_FAOSTAT %>% filter(Element == \"Production\") Ukr_real_grain <- ggplot() + geom_bar(data=Ukr_grain_dat, aes(fill=Item, y=Value, x=Year),                                       position=\"stack\", stat=\"identity\") + scale_fill_npg() +   theme_bw() + labs(fill='Crop Type', y= 'Total tonnes produced') +    scale_y_continuous(labels = unit_format(unit = \"M\", scale = 1e-6)) +   scale_x_continuous(breaks=seq(2010,2021, 1)) Ukr_annual_preds_terms <- predict(all_gam, type=\"iterms\",  ## Predict without new data                                  se.fit=TRUE)  head(Ukr_annual_preds_terms$fit) ##     s(year)  s(month)   s(x,y) ti(year,month) ti(year,x,y) ## 1 -8.362206 -130.8111 27.40552       11.33822    -4.180633 ## 2 -8.362206 -130.8111 26.32686       11.33822    -2.047021 ## 3 -8.362206 -130.8111 25.67037       11.33822    -0.752134 ## 4 -8.362206 -130.8111 23.65540       11.33822     2.265061 ## 5 -8.362206 -130.8111 31.78263       11.33822     4.565532 ## 6 -8.362206 -130.8111 27.54546       11.33822     3.864531 Ukr_annual_preds_fit <- as.data.frame(Ukr_annual_preds_terms$fit) Ukr_annual_preds_fit$year <- npp_mod_df$year names(Ukr_annual_preds_fit) <- c('year_hat', 'month_hat', 'space_hat', 'yxm_hat', 'yxs_hat', 'year')  Ukr_annual_terms <- Ukr_annual_preds_fit %>% group_by(year) %>%    summarise(year_term=mean(year_hat)) %>% filter(year<2021) Ukr_grainprod_annual <- Ukr_grain_dat %>% group_by(Year) %>% filter(Element ==\"Production\") %>%    summarise(tonnes=sum(Value))  Ukr_corr_df <- bind_cols(Ukr_grainprod_annual$tonnes, Ukr_annual_terms$year_term) ## New names: ## • `` -> `...1` ## • `` -> `...2` names(Ukr_corr_df) <- c(\"RealTonnes\", \"YearTerms\") ggscatter(data = Ukr_corr_df, x = 'YearTerms', y = 'RealTonnes',            add = \"reg.line\", conf.int = TRUE,            cor.coef = TRUE, cor.method = \"pearson\",           xlab = \"Predicted NPP term\", ylab = \"Real T crop produced\") ## `geom_smooth()` using formula 'y ~ x' shapiro.test(Ukr_grainprod_annual$tonnes) ##  ##  Shapiro-Wilk normality test ##  ## data:  Ukr_grainprod_annual$tonnes ## W = 0.91562, p-value = 0.2839 shapiro.test(Ukr_annual_terms$year_term) ##  ##  Shapiro-Wilk normality test ##  ## data:  Ukr_annual_terms$year_term ## W = 0.96143, p-value = 0.7894 cor.test(Ukr_grainprod_annual$tonnes, Ukr_annual_terms$year_term, method=\"pearson\", alternative=\"greater\") ##  ##  Pearson's product-moment correlation ##  ## data:  Ukr_grainprod_annual$tonnes and Ukr_annual_terms$year_term ## t = 3.0657, df = 9, p-value = 0.006724 ## alternative hypothesis: true correlation is greater than 0 ## 95 percent confidence interval: ##  0.3051798 1.0000000 ## sample estimates: ##      cor  ## 0.714719 Ukr_realagree <- ggdraw() +   draw_plot(Ukr_year_sm_ggplot, x=0, y=0.5, width=0.915, height=0.5) +   draw_plot(Ukr_real_grain, x=0, y=0, width=1, height=0.5) +   theme(plot.background = element_rect(fill=\"white\", color = NA)) Ukr_realagree"},{"path":"/articles/Ukraine-NPP-analysis.html","id":"monthly-effect-and-crop-calendar","dir":"Articles","previous_headings":"Investigating trends and agreement with ground data","what":"Monthly effect and crop calendar","title":"Ukraine NPP Analysis","text":"’d also like inspect effect month cropland NPP pre post invasion. can plot_smooth function . code chunk also produces crop calendar adapted UN FAO GIEWS Factsheet.  Now can combine plots.","code":"month_war_plot <- plot_smooth(all_gam_war, view=\"month\",plot_all=\"war\", rm.ranef = F) ## Summary: ##  * war : factor; set to the value(s): Post-invasion, Pre-invasion.  ##  * month : numeric predictor; with 30 values ranging from 1.000000 to 12.000000.  ##  * x : numeric predictor; set to the value(s): 31.7779031.  ##  * y : numeric predictor; set to the value(s): 49.0704723. month_war_plot_dat <- month_war_plot$fv %>% select(war, month, fit, ll, ul) %>%    filter(war==\"Pre-invasion\" | month<8&month>2.8) month_war_plot_dat$month_abb <- month.abb[month_war_plot_dat$month]  month_comp_plot <- ggplot(data=month_war_plot_dat) + geom_line(aes(x=month, y=fit, col=war)) +   geom_ribbon(aes(ymin=ll, ymax=ul, x=month, fill=war), alpha=0.2) + theme_bw() +   scale_x_continuous(breaks = 1:12,          labels = c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')) +   labs(y=bquote('NPP'~(kgC/m^2)), x='Month') +   theme(legend.title=element_blank()) + scale_fill_npg()  colors <- c(\"Sowing\" = \"brown\", \"Growing\" = \"darkgreen\", \"Harvest\" = \"orange\")  Ukr_crop_cal <- ggplot() +   geom_linerange(aes(x= \"Winter Cereals\", ymin=as.Date(\"2013-01-01\"), ymax=as.Date(\"2013-06-30\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Winter Cereals\", ymin=as.Date(\"2013-06-30\"), ymax=as.Date(\"2013-08-20\"), color=\"Harvest\"), size=5) +   geom_linerange(aes(x= \"Winter Cereals\", ymin=as.Date(\"2013-09-01\"), ymax=as.Date(\"2013-10-30\"), color=\"Sowing\"), size=5) +   geom_linerange(aes(x= \"Winter Cereals\", ymin=as.Date(\"2013-10-30\"), ymax=as.Date(\"2013-12-31\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Maize\", ymin=as.Date(\"2013-05-01\"), ymax=as.Date(\"2013-06-10\"), color=\"Sowing\"), size=5) +   geom_linerange(aes(x= \"Maize\", ymin=as.Date(\"2013-06-10\"), ymax=as.Date(\"2013-10-01\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Maize\", ymin=as.Date(\"2013-10-01\"), ymax=as.Date(\"2013-11-30\"), color=\"Harvest\"), size=5) +   geom_linerange(aes(x= \"Sunflower\", ymin=as.Date(\"2013-04-01\"), ymax=as.Date(\"2013-06-01\"), color=\"Sowing\"), size=5) +   geom_linerange(aes(x= \"Sunflower\", ymin=as.Date(\"2013-06-01\"), ymax=as.Date(\"2013-08-31\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Sunflower\", ymin=as.Date(\"2013-08-31\"), ymax=as.Date(\"2013-10-30\"), color=\"Harvest\"), size=5) +   geom_linerange(aes(x= \"Rapeseed\", ymin=as.Date(\"2013-01-01\"), ymax=as.Date(\"2013-06-30\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Rapeseed\", ymin=as.Date(\"2013-06-30\"), ymax=as.Date(\"2013-08-31\"), color=\"Harvest\"), size=5) +   geom_linerange(aes(x= \"Rapeseed\", ymin=as.Date(\"2013-08-31\"), ymax=as.Date(\"2013-10-01\"), color=\"Sowing\"), size=5) +   geom_linerange(aes(x= \"Rapeseed\", ymin=as.Date(\"2013-10-01\"), ymax=as.Date(\"2013-12-31\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Potatoes\", ymin=as.Date(\"2013-04-01\"), ymax=as.Date(\"2013-06-01\"), color=\"Sowing\"), size=5) +   geom_linerange(aes(x= \"Potatoes\", ymin=as.Date(\"2013-06-01\"), ymax=as.Date(\"2013-09-01\"), color=\"Growing\"), size=5) +   geom_linerange(aes(x= \"Potatoes\", ymin=as.Date(\"2013-09-01\"), ymax=as.Date(\"2013-10-31\"), color=\"Harvest\"), size=5) +   coord_flip() +  scale_y_date(lim = c(as.Date(\"2013-01-01\"), as.Date(\"2013-12-31\")),breaks=date_breaks(width = \"1 month\"), labels = date_format(\"%b\"))+   labs(x=\"\", y=\"Month\") + theme_bw()+ scale_color_manual(values = colors) + theme(legend.title=element_blank()) Ukr_cropplots <- ggdraw() +   draw_plot(month_comp_plot, x=0.075, y=0.5, width=0.91, height=0.5) +   draw_plot(Ukr_crop_cal, x=0, y=0, width=1, height=0.5)+   theme(plot.background = element_rect(fill=\"white\", color = NA)) Ukr_cropplots"},{"path":"/articles/Ukraine-NPP-analysis.html","id":"generate-a-spatial-plot-with-uncertainty","dir":"Articles","previous_headings":"","what":"Generate a spatial plot with uncertainty","title":"Ukraine NPP Analysis","text":"use Vizumap package compare distribution NPP pre post invasion visualise uncertainty associated estimate (Lucchesi, 2021). First, extract data GAMs.   Next, use Vizumap functions build palette colour key.  Finally, can build Vizumap plot.","code":"space_nowar <- fvisgam(all_gam_war, view = c(\"x\", \"y\"),                         cond = list(war = \"Pre-invasion\"),                        main = \"Pre-invasion\", rm.ranef = T,                        n.grid=100,                        too.far=0.01) ## Summary: ##  * war : factor; set to the value(s): Pre-invasion.  ##  * month : numeric predictor; set to the value(s): 7.  ##  * x : numeric predictor; with 100 values ranging from 22.121014 to 40.087319.  ##  * y : numeric predictor; with 100 values ranging from 44.354317 to 52.439155.  ##  * NOTE : The following random effects columns are canceled: s(month):warPre-invasion,s(month):warPost-invasion ## # Extract data for plotting spatial term  space_nowar_dat <- space_nowar$fv space_nowar_dat$SE <- space_nowar_dat$CI/1.96  # Rpt for war space_war <- fvisgam(all_gam_war, view = c(\"x\", \"y\"),                         cond = list(war = \"Post-invasion\"),                        main = \"Post-invasion\", rm.ranef = T,                        n.grid=100,                        too.far=0.01) ## Summary: ##  * war : factor; set to the value(s): Post-invasion.  ##  * month : numeric predictor; set to the value(s): 7.  ##  * x : numeric predictor; with 100 values ranging from 22.121014 to 40.087319.  ##  * y : numeric predictor; with 100 values ranging from 44.354317 to 52.439155.  ##  * NOTE : The following random effects columns are canceled: s(month):warPre-invasion,s(month):warPost-invasion ## # Extract data for plotting spatial term space_war_dat <- space_war$fv space_war_dat$SE <- space_war_dat$CI/1.96 # Create palette npp_pal <- build_palette(name = \"usr\",                            colrange = list(colour = c(\"chartreuse4\", \"darkblue\"),                                            difC = c(3, 4))) view(npp_pal) # creating df for Vizumap plotting space_npp_dat <- bind_rows(space_nowar_dat, space_war_dat) npp_war_df <- read.uv(data = space_npp_dat, estimate = \"fit\",                         error = \"SE\") names(npp_war_df)[c(1, 5,6)] <- c(\"Estimate\", \"long\", \"lat\")  # build key UKey <- build_bkey(data = npp_war_df, terciles = T, palette = npp_pal) k <- view(UKey)    nppBivMap <- build_bmap(data = npp_war_df, terciles = T,                             palette = npp_pal) obj <- nppBivMap obj_cropped <- exclude.too.far(obj$output_data$long, obj$output_data$lat,                                 npp_mod_df$x, npp_mod_df$y, dist=0.015)  m <- ggplot() +      geom_raster(data = obj$output_data[!obj_cropped,],                  aes(x = long, y = lat, fill = hex_code)) +     facet_wrap(~war, nrow=2) + scale_fill_identity() + coord_quickmap() +       xlab(\"\") + ylab(\"\") + geom_sf(data=Ukr_bnds, alpha=0) + theme_bw() ## Coordinate system already present. Adding new coordinate system, which will replace the existing one. mk <- ggdraw() +   draw_plot(m, x=0, y=0, width=0.6, height=1) +   draw_plot(k, x=0.6, y=0, width = 0.4, height=1)+   theme(plot.background = element_rect(fill=\"white\", color = NA)) mk"},{"path":"/articles/Ukraine-NPP-analysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Ukraine NPP Analysis","text":"Lucchesi, L., Kuhnert, P., Wikle, C. (2021). Vizumap: R package visualising uncertainty spatial data. Journal Open Source Software, 6(59), 2409, https://doi.org/10.21105/joss.02409 Wellington, M., Lawes, R., Kuhnert, P. (2022) Rapid monitoring crop growth, grain exports, fire patterns Ukraine, Nature Food, Review. Wood, S. N., Li, Z., Shaddick, G. & Augustin, N. H. (2017) Generalized Additive Models Gigadata: Modeling U.K. Black 166 Smoke Network Daily Data. J. . Stat. Assoc. 112, 1199–1210, DOI: 10.1080/01621459.2016.1195744. Wood, S. N. (2006) Generalized additive models: introduction R, Chapman Hall/CRC.","code":""},{"path":"/articles/Ukraine_fire_analysis.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Ukraine Fire Analysis","text":"following script accompanies paper Wellington et al. (2022) explores fire incidence data 25-km spatial resolutions day 1st January 2012 20th July 2022 Ukraine. first load library relevant fire data. tidy data construct percent fire pixels total pixels preparation plotting. selected pixels showing fire omitted NAs dataset vignette reduce data size. therefore record number pixels original, larger dataset, can calculate % pixels active fires. produce plot cumulative cropland fire area pre invasion (2012-21) post invasion (2022) periods. calculated percentage pixels fire present. Shaded ribbons plot denoste 95% confidence intervals smooth cumulative fire area periods investigated.  ``","code":"library(UkraineCrops)  data(fire_mod_df) # Note that there are 3034 pixels during data extraction.  # Store this so we can calc. % fire pixels from total pixels pixels <- 3034  # % fire analysis  month_pc_ts <- fire_mod_df %>%       mutate(fire_inc=if_else(fire==\"NaN\", 0,1)) %>%    group_by(year, war,month) %>%    summarise(fire_pc_mean = mean(sum(fire_inc)/(pixels*length(unique(date))))) ## `summarise()` has grouped output by 'year', 'war'. You can override using the ## `.groups` argument. month_pc_ts <- month_pc_ts %>% group_by(war, month) %>%    summarise(fire_pc = mean(fire_pc_mean),             fire_pc_sd = sd(fire_pc_mean, na.rm = TRUE)) ## `summarise()` has grouped output by 'war'. You can override using the `.groups` ## argument. # Cumulative fire area plot cum_plot_dat <-  fire_mod_df %>% mutate(fire_inc=if_else(fire==\"NaN\", 0,1)) %>%    group_by(year, war,month, day) %>%    summarise(fire_pc_mean = mean(sum(fire_inc)/(pixels*length(unique(date))))) %>%   group_by(war, month) %>%    summarise(fire_pc = mean(fire_pc_mean),             fire_pc_sd = sd(fire_pc_mean, na.rm = TRUE)) %>%    mutate(fire_pc_cumsum = cumsum(fire_pc)) ## `summarise()` has grouped output by 'year', 'war', 'month'. You can override ## using the `.groups` argument. ## `summarise()` has grouped output by 'war'. You can override using the `.groups` ## argument. # Figure 3 in manuscript - cumulative fire area cumsum_fire_plot <- ggplot(data=cum_plot_dat) + geom_smooth(aes(x=month, y=fire_pc_cumsum, col=war, fill=war)) +   scale_color_npg(name=\"\") + scale_fill_npg(name=\"\") +   theme_bw() +  scale_y_continuous(labels = scales::percent) +   scale_x_continuous(breaks=seq(1,12,1))+ labs(x=\"Month\", y=\"Cumulative cropland fire area (%)\")   cumsum_fire_plot ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'"},{"path":"/articles/Ukraine_fire_analysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Ukraine Fire Analysis","text":"Wellington, M., Lawes, R., Kuhnert, P. (2022) Rapid monitoring crop growth, grain exports, fire patterns Ukraine, Nature Food, Review.","code":""},{"path":"/articles/Ukraine_ship_analysis.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Ukraine Ship Analysis","text":"following script accompanies paper Wellington et al. (2022) explores shipping data particular, cargo ship routes 2021 2022 ports around Ukraine. first load library raster data object. example demonstrates generate map plots. raster data pre-processed described manuscript. original data can downloaded EMODNET.","code":"library(UkraineCrops) data(cargo_year_df) data(Port_activity_ggdf)"},{"path":"/articles/Ukraine_ship_analysis.html","id":"data-curation","dir":"Articles","previous_headings":"","what":"Data Curation","title":"Ukraine Ship Analysis","text":"curate dataset map constrained major ports Ukraine.","code":"sf::sf_use_s2(FALSE) ## Spherical geometry (s2) switched off world <- ne_countries(scale = \"medium\", returnclass = \"sf\") class(world) ## [1] \"sf\"         \"data.frame\" world_points<- st_centroid(world) world_points <- cbind(world, st_coordinates(st_centroid(world$geometry)))  world_area <- world %>%  dplyr::filter(name %in% c('Ukraine', 'Russia',                                                    'Romania', 'Moldova',                                                    'Bulgaria', 'Turkey', 'Georgia',                                                    'Greece'))"},{"path":"/articles/Ukraine_ship_analysis.html","id":"map-generation","dir":"Articles","previous_headings":"","what":"Map Generation","title":"Ukraine Ship Analysis","text":"now generate plot shipping routes Black Sea 2021 2022 January August.","code":"facet_map <- ggplot() +    geom_sf(data = world_area, fill=\"grey\", show.legend=FALSE) +    coord_sf(xlim = c(25.5, 43.5), ylim = c(40.1, 48.1), expand = FALSE) +    xlab('Longitude') + ylab('Latitude') +    theme(panel.grid.major =            element_line(color = gray(.5), linetype = 'dashed', size = 0.5),         panel.background = element_rect(fill = 'aliceblue')) +   new_scale_fill() +   geom_raster(data = cargo_year_df, aes(x=x, y=y, fill=value)) +   scale_fill_viridis_c(limits = c(0, 100), oob = scales::squish,                         name=expression(paste(\"Route Density/\", km^2)),                        alpha=0.5) +   annotate(geom = \"text\", x = 40.3, y = 45.6, label = \"RUSSIA\",             color = \"grey28\", size = 4) +   annotate(geom = \"text\", x = 33, y = 47.5, label = \"UKRAINE\",             color = \"grey28\", size = 4) +   annotate(geom = \"text\", x = 34, y = 40.7, label = \"TURKEY\",             color = \"grey28\", size = 3) +   annotate(geom = \"text\", x = 28.4, y = 47.4, label = \"MOLDOVA\",             color = \"grey28\", size = 1.4, angle=-50) +   annotate(geom = \"text\", x = 42.4, y = 42.6, label = \"GEORGIA\",             color = \"grey28\", size = 1.8, angle=-40) +   annotate(geom = \"text\", x = 26.9, y = 45.5, label = \"ROMANIA\",             color = \"grey28\", size = 2.0, angle=-40) +   annotate(geom = \"text\", x = 26.7, y = 43.0, label = \"BULGARIA\",             color = \"grey28\", size = 1.2, angle=-40) +   annotate(geom = \"text\", x = 36.5, y = 46.2, label = \"Sea of Azov\",             fontface = \"italic\", color = \"grey22\", size = 2.1) +   annotate(geom = \"text\", x = 34.3, y = 43.4, label = \"Black Sea\",             fontface = \"italic\", color = \"grey22\", size = 4) +   annotate(geom = \"text\", x = 37.6, y = 47.1, label = \"Mariupol\",             fontface = \"bold\", color = \"black\", size = 3) +   annotate(geom = \"text\", x = 37.8, y = 44.7, label = \"Novorossiysk\",             fontface = \"bold\", color = \"black\", size = 3) +   annotate(geom = \"text\", x = 30.8, y = 46.8, label = \"Odesa\",             fontface = \"bold\", color = \"black\", size = 3) +   annotate(geom = \"text\", x = 29.5, y = 45.4, label = \"Danube Delta\",             fontface = \"bold\", color = \"black\", size = 3) +   annotate(geom = \"text\", x = 28.7, y = 44.1, label = \"Constanta\",             fontface = \"bold\", color = \"black\", size = 3) +   #annotation_scale(location = 'bl', width_hint = 0.5, height = unit(0.1, \"cm\")) +    annotation_north_arrow(location = 'tr', which_north = 'true',                          pad_x = unit(0.05, 'in'), pad_y = unit(0.05, 'in'),                           style = north_arrow_fancy_orienteering,                          height= unit(0.5, \"cm\"),                          width= unit(0.5, \"cm\")) +    facet_grid(~year) +   theme(legend.position=\"bottom\")"},{"path":"/articles/Ukraine_ship_analysis.html","id":"plot-generation","dir":"Articles","previous_headings":"","what":"Plot Generation","title":"Ukraine Ship Analysis","text":"need generate second plot, shows cumulative shipping route density different port centres. , using pre-processed data vignette. Details pre-processing can found Wellington et al. (reference ).","code":"Activity_month_plot <- ggplot(data=Port_activity_ggdf) + geom_line(aes(x=month, y=activity_cumsum, col=year_fac), size=2) +   facet_wrap(~port, scale=\"free_y\", nrow=3) + theme_bw() + scale_x_continuous(breaks = 1:12,          labels = c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')) +   labs(x=\"Month\", y=expression(paste(\"Cumulative Route Density/\", km^2))) + theme(legend.title=element_blank()) +   scale_color_manual(values = c(\"purple\", \"orange\"))"},{"path":"/articles/Ukraine_ship_analysis.html","id":"formatting-final-plot","dir":"Articles","previous_headings":"","what":"Formatting Final Plot","title":"Ukraine Ship Analysis","text":"can now assemble plot combining mapped comparison cumulative route density.","code":"Ship_plot <- ggdraw() +   draw_plot(Activity_month_plot, x=0,y=0, width=1, height=0.5) +   draw_plot(facet_map, x=0, y=0.5, width=1, height=0.5) +   theme(plot.background = element_rect(fill=\"white\", color = NA)) Ship_plot"},{"path":"/articles/Ukraine_ship_analysis.html","id":"calculate-change","dir":"Articles","previous_headings":"","what":"Calculate % change","title":"Ukraine Ship Analysis","text":"Finally, ’ll calculate percentage change shipping activity, year year August. Interesting activity Odesa Mariupol decreased 53% 60%, respectively. roughly equates closed 5 9 months (5/9*100 = 55.6%). Final calculation increase activity Danube Delta .","code":"Port_activity_ggdf %>% filter(month==9, port=='Odesa') ## # A tibble: 2 × 9 ## # Groups:   port, year [2] ##   port  name     Activity Date        year month   day activity_cumsum year_fac ##   <chr> <chr>       <dbl> <date>     <dbl> <dbl> <int>           <dbl> <fct>    ## 1 Odesa Sep.2022     52.1 2022-09-01  2022     9     1            167. 2022     ## 2 Odesa Sep.2021     40.7 2021-09-01  2021     9     1            353. 2021 (167.37-353.18)/353.18*100 ## [1] -52.61057 Port_activity_ggdf %>% filter(month==9, port=='Mariupol') ## # A tibble: 2 × 9 ## # Groups:   port, year [2] ##   port     name     Activity Date        year month   day activity_cum…¹ year_…² ##   <chr>    <chr>       <dbl> <date>     <dbl> <dbl> <int>          <dbl> <fct>   ## 1 Mariupol Sep.2022     36.6 2022-09-01  2022     9     1           135. 2022    ## 2 Mariupol Sep.2021     66.6 2021-09-01  2021     9     1           333. 2021    ## # … with abbreviated variable names ¹​activity_cumsum, ²​year_fac (134.67-332.55)/332.55*100 ## [1] -59.50383 Port_activity_ggdf %>% filter(month==9, port=='Danube Delta') ## # A tibble: 2 × 9 ## # Groups:   port, year [2] ##   port         name     Activity Date        year month   day activity…¹ year_…² ##   <chr>        <chr>       <dbl> <date>     <dbl> <dbl> <int>      <dbl> <fct>   ## 1 Danube Delta Sep.2022     9.33 2022-09-01  2022     9     1       94.7 2022    ## 2 Danube Delta Sep.2021     7.84 2021-09-01  2021     9     1       55.4 2021    ## # … with abbreviated variable names ¹​activity_cumsum, ²​year_fac (94.68-55.37)/94.68*100 ## [1] 41.5188"},{"path":"/articles/Ukraine_ship_analysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Ukraine Ship Analysis","text":"Wellington, M., Lawes, R., Kuhnert, P. (2022) Rapid monitoring crop growth, grain exports, fire patterns Ukraine.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Wellington. Author, maintainer. Petra Kuhnert. Contributor, thesis advisor. Roger Lawes. Thesis advisor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wellington M (2023). UkraineCrops: Ukraine-crop Analysis. R package version 0.9.0, https://mickwelli.github.io/Ukraine-crops/.","code":"@Manual{,   title = {UkraineCrops: Ukraine-crop Analysis},   author = {Michael Wellington},   year = {2023},   note = {R package version 0.9.0},   url = {https://mickwelli.github.io/Ukraine-crops/}, }"},{"path":[]},{"path":"/index.html","id":"code-and-data-used-to-analyse-ukraine-grain-supply-in-2022","dir":"","previous_headings":"","what":"Code and data used to analyse Ukraine grain supply in 2022.","title":"Ukraine-crop Analysis","text":"UkraineCrops pkgdown site vignettes.","code":""},{"path":"/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Ukraine-crop Analysis","text":"Michael Wellington, Australian National University & CSIRO, Email: Michael.Wellington@anu.edu.au Roger Lawes, CSIRO, Email: Roger.Lawes@csiro.au Petra Kuhnert, CSIRO Data61, Email: Petra.Kuhnert@data61.csiro.au","code":""},{"path":"/index.html","id":"about-the-package","dir":"","previous_headings":"","what":"About the Package","title":"Ukraine-crop Analysis","text":"repo contains data code used analyse Ukraine grain supply 2022 outlined Wellington et al. (2022). code appears three vignettes outline NPP analysis mapping shipping movements.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Ukraine-crop Analysis","text":"UkraineCrops licensed GPLv3. Please see details CSIRO’s Data Access Portal.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Ukraine-crop Analysis","text":"Wellington et al., (2022). UkraineCrop: R package housing reproducible code support paper analyses satellite images cropland Ukraine investigate progress 2022 season.","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Ukraine-crop Analysis","text":"Wellington, M., Lawes, R., Kuhnert, P. (2022) Rapid monitoring crop growth, grain exports, fire patterns Ukraine.","code":""},{"path":"/reference/cargo_year_df.html","id":null,"dir":"Reference","previous_headings":"","what":"cargo_year_df — cargo_year_df","title":"cargo_year_df — cargo_year_df","text":"Cargo shipping route density Black Sea August 2021 August 2022. Data originally EMODNET.","code":""},{"path":"/reference/cargo_year_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cargo_year_df — cargo_year_df","text":"","code":"cargo_year_df"},{"path":"/reference/cargo_year_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"cargo_year_df — cargo_year_df","text":"data frame comprising 860132 rows 4 columns. year year route density data x longitude y latitude value Cargo shipping route density/km2","code":""},{"path":"/reference/GPP_mod_df.html","id":null,"dir":"Reference","previous_headings":"","what":"GPP_mod_df — GPP_mod_df","title":"GPP_mod_df — GPP_mod_df","text":"GPP MODIS data represented data frame extracted 1st January 2010 August 2022.","code":""},{"path":"/reference/GPP_mod_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GPP_mod_df — GPP_mod_df","text":"","code":"GPP_mod_df"},{"path":"/reference/GPP_mod_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GPP_mod_df — GPP_mod_df","text":"data frame comprising 1283803 rows 10 columns. date date NPP capture x longitude y latitude GPP Gross Primary Productivity year year NPP captured month month NPP captured day day month NPP captured war factor representing pre (2012-2021) post (2022) war period x_1 longitude backup y_1 latitude backup","code":""},{"path":"/reference/NDVI_mod_df.html","id":null,"dir":"Reference","previous_headings":"","what":"NDVI_mod_df — NDVI_mod_df","title":"NDVI_mod_df — NDVI_mod_df","text":"NDVI MODIS data represented data frame extracted 1st January 2012 11th July 2022.","code":""},{"path":"/reference/NDVI_mod_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NDVI_mod_df — NDVI_mod_df","text":"","code":"NDVI_mod_df"},{"path":"/reference/NDVI_mod_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NDVI_mod_df — NDVI_mod_df","text":"data frame comprising 387617 rows 8 columns. date date NDVI capture x longitude y latitude NDVI Normalised Difference Vegetation Index year year NDVI captured month month NDVI captured day day month NDVI captured war factor representing pre (2012-2021) post (2022) war period","code":""},{"path":"/reference/npp_mod_df.html","id":null,"dir":"Reference","previous_headings":"","what":"npp_mod_df — npp_mod_df","title":"npp_mod_df — npp_mod_df","text":"NPP MODIS data represented data frame extracted 1st January 2010 August 2022.","code":""},{"path":"/reference/npp_mod_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"npp_mod_df — npp_mod_df","text":"","code":"npp_mod_df"},{"path":"/reference/npp_mod_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"npp_mod_df — npp_mod_df","text":"data frame comprising 813008 rows 10 columns. date date NPP capture x longitude y latitude NPP Net Primary Productivity year year NPP captured month month NPP captured day day month NPP captured war factor representing pre (2012-2021) post (2022) war period x_1 longitude backup y_1 latitude backup","code":""},{"path":"/reference/Port_activity_ggdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Port_activity_ggdf — Port_activity_ggdf","title":"Port_activity_ggdf — Port_activity_ggdf","text":"Port activity summarised across space 2021 August 2022. Data originally EMODNET.","code":""},{"path":"/reference/Port_activity_ggdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Port_activity_ggdf — Port_activity_ggdf","text":"","code":"Port_activity_ggdf"},{"path":"/reference/Port_activity_ggdf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Port_activity_ggdf — Port_activity_ggdf","text":"data frame comprising 100 rows 9 columns. port Name port zone name Layer name raster file Activity Mean route density /km2 Date Date image raster. year year shipping data month month shipping data day day shipping data activity_cumsum Cumulative sum activity year. year_fac Year factor plotting","code":""},{"path":"/reference/Ukr_bnds.html","id":null,"dir":"Reference","previous_headings":"","what":"Ukr_bnds — Ukr_bnds","title":"Ukr_bnds — Ukr_bnds","text":"Ukraine shape file","code":""},{"path":"/reference/Ukr_bnds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ukr_bnds — Ukr_bnds","text":"","code":"Ukr_bnds"},{"path":"/reference/Ukr_bnds.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ukr_bnds — Ukr_bnds","text":"`sf` object containing Ukraine border.","code":""},{"path":"/reference/Ukr_FAOSTAT.html","id":null,"dir":"Reference","previous_headings":"","what":"Ukr_FAOSTAT — Ukr_FAOSTAT","title":"Ukr_FAOSTAT — Ukr_FAOSTAT","text":"Crop production 2010-2020 Ukraine originally taken FAOSTAT.","code":""},{"path":"/reference/Ukr_FAOSTAT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ukr_FAOSTAT — Ukr_FAOSTAT","text":"","code":"Ukr_FAOSTAT"},{"path":"/reference/Ukr_FAOSTAT.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ukr_FAOSTAT — Ukr_FAOSTAT","text":"data frame comprising 198 rows 14 columns. Domain.Code Domain.Code Domain Domain Area.Code..FAO. Area.Code..FAO. Area Area Element.Code Element.Code Element Element Item.Code..FAO. Item.Code..FAO. Item Item Year.Code Year.Code Year Year Unit Unit Value Value Flag Flag Flag.Description Flag.Description","code":""}]
