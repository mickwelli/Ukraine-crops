[{"path":"/articles/Ukraine-NDVI-analysis.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Ukraine NDVI Analysis","text":"following script accompanies paper Wellington et al. (2022) explores crop growth, grain exports fire patterns Ukraine. first vignette focuses trends crop growth using NDVI.","code":""},{"path":[]},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"reading-in-relevant-datasets","dir":"Articles","previous_headings":"","what":"Reading in relevant datasets","title":"Ukraine NDVI Analysis","text":"load NDVI data clipped Ukraine load relevant shape file. datasets also available /data /inst/extdata directories can read using readRDS st_read commands respectively.","code":"library(UkraineCrops)  data(NDVI_mod_df) data(Ukr_bnds)"},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"creating-a-pre-and-post-invasion-term","dir":"Articles","previous_headings":"","what":"Creating a pre and post-invasion term","title":"Ukraine NDVI Analysis","text":"NDVI_mod_df includes war term pre post 2022 calendar years also need create pre post-invasion term reflected date invasion (24th February 2022).","code":"# Allocate factor for invasion NDVI_mod_df$inv <- as.factor(if_else(NDVI_mod_df$date < '2022-02-24', \"0\", \"1\"))"},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"fitting-the-generalised-additive-model-gam","dir":"Articles","previous_headings":"","what":"Fitting the Generalised Additive Model (GAM)","title":"Ukraine NDVI Analysis","text":"fit Generalised Additive Model (GAM) (Wood 2006) assuming Gaussian distribution response variable, NDVI include smooth terms year, season, space relevant interactions, consist season within year, space time. add factor inv allows us investigate pre post invasion effect. also explore GAM structure fits term reflecting pre (2012-21) post war (2022) periods. term refer war represents binary variable 1 indicates year 2022 war began. now fit model using mgcv package R store results. accommodate temporal dependencies fit correlation term model result iterative process outlined Wood et al. (2017). final model fits presented . model takes minutes run.","code":"# Setting up the GAM structure with key smoothers for trend terms all_f <- NDVI ~     # smooth term for year   s(year, bs=\"cr\", k=11) +    # cyclic term for season   s(month, bs=\"cc\", k=12) +     # smooth term for space   s(x,y, bs='gp', k=50)  +               # seasonal within year   ti(month, year, bs = c(\"cc\", \"cr\"), k = c(12,11)) +     # space x time   ti(x, y, year, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,11), m=list(2, NA)) # Setting up the GAM structure with an added term reflecting # the start of the invasion all_f_inv <- NDVI ~     # factor for pre/ post-invasion   inv +    # cyclic term for season   s(month, bs=\"cc\", k=12, by=inv) +     # smooth term for space   s(x,y, bs='gp', k=50, by=inv) +   # space x time   ti(x, y, month, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,12), m=list(2, NA), by=inv) all_f_war <- NDVI ~     # factor for pre/ post-2022   war +    # cyclic term for season   s(month, bs=\"cc\", k=12, by=war) +     # smooth term for space   s(x,y, bs='gp', k=50, by=war) +   # space x time   ti(x, y, month, d = c(2, 1), bs = c(\"gp\", \"cr\"),       k = c(50,12), m=list(2, NA), by=war) # Run GAMs for large datasets all_gam <- bam(all_f, data=NDVI_mod_df, discrete=TRUE, nthreads=8, rho=0.8) all_gam_war <- bam(all_f_war, data=NDVI_mod_df, discrete=TRUE, nthreads=8, rho=0.6) all_gam_inv <- bam(all_f_inv, data=NDVI_mod_df, discrete=TRUE, nthreads=8, rho=0.6)  # Output shows effect of the invasion on cropland NDVI summary(all_gam_inv) ##  ## Family: gaussian  ## Link function: identity  ##  ## Formula: ## NDVI ~ inv + s(month, bs = \"cc\", k = 12, by = inv) + s(x, y,  ##     bs = \"gp\", k = 50, by = inv) + ti(x, y, month, d = c(2, 1),  ##     bs = c(\"gp\", \"cr\"), k = c(50, 12), m = list(2, NA), by = inv) ##  ## Parametric coefficients: ##             Estimate Std. Error  t value Pr(>|t|)     ## (Intercept) 4378.975      2.932 1493.446   <2e-16 *** ## inv1         -11.099    982.597   -0.011    0.991     ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##                        edf Ref.df         F  p-value     ## s(month):inv0        9.990  10.00 33993.699  < 2e-16 *** ## s(month):inv1        2.983   4.00  1617.662  < 2e-16 *** ## s(x,y):inv0         48.260  48.83  1412.879  < 2e-16 *** ## s(x,y):inv1         33.003  36.09     1.967 0.000487 *** ## ti(month,x,y):inv0 376.214 429.05   127.888  < 2e-16 *** ## ti(month,x,y):inv1  55.979  72.09     8.046  < 2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.716   Deviance explained = 71.6% ## fREML = 3.0937e+06  Scale est. = 7.7897e+05  n = 387617"},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"model-checking","dir":"Articles","previous_headings":"","what":"Model Checking","title":"Ukraine NDVI Analysis","text":"examine fit model check temporal spatial autocorrelation residuals. diagnostics examined sufficiently account correlation data given model structure.","code":"# Temporal autocorrelation plot resids <- residuals.gam(all_gam_inv) acf_plot_ar <- acf(resids, type = \"correlation\")  plot(acf_plot_ar) # Variogram for spatial autocorrelation data_pred <- data.frame(resids = resids, long = NDVI_mod_df$x, lat = NDVI_mod_df$y) coordinates(data_pred) <- ~long+lat # Select a sample for compute efficiency   var_plot <- variogram (resids ~ 1, data = data_pred[sample(1:nrow(data_pred), 10000),])   plot(var_plot)"},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"investigating-key-trends","dir":"Articles","previous_headings":"","what":"Investigating Key Trends","title":"Ukraine NDVI Analysis","text":"obtain NDVI predictions model produce maps comparing baseline period 2012-2021 (top row) 2022 (bottom row) per Figure 2 Wellington et al. (2022). (Note takes minutes run)  plot partial effect year cropland NDVI Ukrain shaded ribbon denoting plus/minus standard error estimate.","code":"# Get predictions for plotting all_gam_war_pred <- predict(all_gam_war, se=TRUE)  all_gam_war_pred_df <- data.frame(pred = all_gam_war_pred$fit,                                   pred_se = all_gam_war_pred$se.fit,                                   x = NDVI_mod_df$x,                                   y= NDVI_mod_df$y,                                   year = NDVI_mod_df$year,                                   month = NDVI_mod_df$month,                                   war=NDVI_mod_df$war)   # Filter to current time period to allow comparison of baseline to 2022 all_gam_war_pred_space_df <- all_gam_war_pred_df %>% filter(month < 7)  # Space plot by month space_month_year_plot <- ggplot(data=all_gam_war_pred_space_df) + geom_tile(aes(x=x, y=y, fill=pred)) +    geom_contour(aes(x=x, y=y, z=pred, col=\"red\"), )  + theme_bw() + facet_grid(war~month) +   scale_fill_viridis_c(name='NDVI') + coord_equal() +   labs(x='Longitude', y='Latitude') + guides(alpha=\"none\", colour=\"none\") + geom_sf(data=Ukr_bnds, alpha=0) +   theme(legend.key.size = unit(1, 'cm'), legend.position = \"bottom\") ## Coordinate system already present. Adding new coordinate system, which will replace the existing one. space_month_year_plot # Plot partial effect of year all_gam_viz <- getViz(all_gam)  all_gam_year_plot_dat <- plot(sm(all_gam_viz, 1))$data$fit  Ukr_year_plot <- ggplot(data = all_gam_year_plot_dat) +    geom_line(aes(x = x, y = y)) +   geom_ribbon(aes(x = x, ymin = y-se, ymax = y+se), alpha = 0.2) +    theme_bw() +   scale_x_continuous(breaks = seq(2012, 2022,1)) +   labs(y = \"NDVI\", x = \"Year\")  Ukr_year_plot"},{"path":"/articles/Ukraine-NDVI-analysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Ukraine NDVI Analysis","text":"Wellington, M., Lawes, R., Kuhnert, P. (2022) Rapid monitoring crop growth, grain exports, fire patterns Ukraine, Nature Food, Review. Wood, S. N., Li, Z., Shaddick, G. & Augustin, N. H. (2017) Generalized Additive Models Gigadata: Modeling U.K. Black 166 Smoke Network Daily Data. J. . Stat. Assoc. 112, 1199–1210, DOI: 10.1080/01621459.2016.1195744. Wood, S. N. (2006) Generalized additive models: introduction R, Chapman Hall/CRC.","code":""},{"path":"/articles/Ukraine_fire_analysis.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Ukraine Fire Analysis","text":"following script accompanies paper Wellington et al. (2022) explores fire incidence data 25-km spatial resolutions day 1st January 2012 20th July 2022 Ukraine. first load library relevant fire data. tidy data construct percent fire pixels total pixels preparation plotting. produce plot cumulative cropland fire area pre invasion (2012-21) post invasion (2022) periods. calculated percentage pixels fire present. Shaded ribbons plot denoste 95% confidence intervals smooth cumulative fire area periods investigated.  ``","code":"library(UkraineCrops)  data(fire_mod_df) # Note in that dims are 37 x 82, store this so we can calc. % fire pixels from total pixels pixels <- 37*82  # % fire analysis  month_pc_ts <- fire_mod_df %>%       mutate(fire_inc=if_else(fire==\"NaN\", 0,1)) %>%    group_by(year, war,month) %>%    summarise(fire_pc_mean = mean(sum(fire_inc)/(pixels*length(unique(date))))) ## `summarise()` has grouped output by 'year', 'war'. You can override using the ## `.groups` argument. month_pc_ts <- month_pc_ts %>% group_by(war, month) %>%    summarise(fire_pc = mean(fire_pc_mean),             fire_pc_sd = sd(fire_pc_mean, na.rm = TRUE)) ## `summarise()` has grouped output by 'war'. You can override using the `.groups` ## argument. # Cumulative fire area plot cum_plot_dat <-  fire_mod_df %>% mutate(fire_inc=if_else(fire==\"NaN\", 0,1)) %>%    group_by(year, war,month, day) %>%    summarise(fire_pc_mean = mean(sum(fire_inc)/(pixels*length(unique(date))))) %>%   group_by(war, month) %>%    summarise(fire_pc = mean(fire_pc_mean),             fire_pc_sd = sd(fire_pc_mean, na.rm = TRUE)) %>%    mutate(fire_pc_cumsum = cumsum(fire_pc)) ## `summarise()` has grouped output by 'year', 'war', 'month'. You can override ## using the `.groups` argument. ## `summarise()` has grouped output by 'war'. You can override using the `.groups` ## argument. # Figure 3 in manuscript - cumulative fire area cumsum_fire_plot <- ggplot(data=cum_plot_dat) + geom_smooth(aes(x=month, y=fire_pc_cumsum, col=war, fill=war)) +   scale_color_npg(name=\"\") + scale_fill_npg(name=\"\") +   theme_bw() +  scale_y_continuous(labels = scales::percent) +   scale_x_continuous(breaks=seq(1,12,1))+ labs(x=\"Month\", y=\"Cumulative cropland fire area (%)\")   cumsum_fire_plot ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'"},{"path":"/articles/Ukraine_fire_analysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Ukraine Fire Analysis","text":"Wellington, M., Lawes, R., Kuhnert, P. (2022) Rapid monitoring crop growth, grain exports, fire patterns Ukraine, Nature Food, Review.","code":""},{"path":"/articles/Ukraine_ship_analysis.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Ukraine Ship Analysis","text":"following script accompanies paper Wellington et al. (2022) explores shipping data particular, cargo ship routes 2021 2022 ports around Ukraine. first load library relevant shipping data. curate dataset map constrained major ports Ukraine. now plot shipping routes Black Sea 2021 2022 January June. represents Figure 4 Wellington et al. (2022)","code":"library(UkraineCrops) sf::sf_use_s2(FALSE) ## Spherical geometry (s2) switched off world <- ne_countries(scale = \"medium\", returnclass = \"sf\") class(world) ## [1] \"sf\"         \"data.frame\" world_points<- st_centroid(world) world_points <- cbind(world, st_coordinates(st_centroid(world$geometry)))  world_area <- world %>%  dplyr::filter(name %in% c('Ukraine', 'Russia',                                                    'Romania', 'Moldova',                                                    'Bulgaria', 'Turkey', 'Georgia',                                                    'Greece')) facet_map_vert <- ggplot() +    geom_sf(data = world_area, fill=\"grey\", show.legend=FALSE) +    coord_sf(xlim = c(25.5, 43.5), ylim = c(40.1, 48.1), expand = FALSE) +    xlab('Longitude') + ylab('Latitude') +    theme(panel.grid.major =            element_line(color = gray(.5), linetype = 'dashed', size = 0.5),         panel.background = element_rect(fill = 'aliceblue')) +   #new_scale_fill() +   #geom_raster(data = ships_war_df, aes(x=x, y=y, fill=value)) +   scale_fill_viridis_c(limits = c(0, 100), oob = scales::squish,                         name=expression(paste(\"Route Density/\", km^2, \"/month\")),                        alpha=0.5) +   annotate(geom = \"text\", x = 40.3, y = 45.6, label = \"RUSSIA\",             color = \"grey28\", size = 3) +   annotate(geom = \"text\", x = 33, y = 47.5, label = \"UKRAINE\",             color = \"grey28\", size = 3) +   annotate(geom = \"text\", x = 34, y = 40.7, label = \"TURKEY\",             color = \"grey28\", size = 3) +   annotate(geom = \"text\", x = 28.4, y = 47.4, label = \"MOLDOVA\",             color = \"grey28\", size = 1.2, angle=-50) +   annotate(geom = \"text\", x = 42.4, y = 42.6, label = \"GEORGIA\",             color = \"grey28\", size = 1.4, angle=-40) +   annotate(geom = \"text\", x = 26.9, y = 45.5, label = \"ROMANIA\",             color = \"grey28\", size = 1.7, angle=-40) +   annotate(geom = \"text\", x = 26.7, y = 43.0, label = \"BULGARIA\",             color = \"grey28\", size = 1.1, angle=-40) +   annotate(geom = \"text\", x = 36.5, y = 46.2, label = \"Sea of Azov\",             fontface = \"italic\", color = \"grey22\", size = 1.3) +   annotate(geom = \"text\", x = 34.3, y = 43.4, label = \"Black Sea\",             fontface = \"italic\", color = \"grey22\", size = 3) +   annotate(geom = \"text\", x = 37.6, y = 47.1, label = \"Mariupol\",             fontface = \"bold\", color = \"black\", size = 2) +   annotate(geom = \"text\", x = 37.8, y = 44.7, label = \"Novorossiysk\",             fontface = \"bold\", color = \"black\", size = 2) +   annotate(geom = \"text\", x = 30.8, y = 46.5, label = \"Odesa\",             fontface = \"bold\", color = \"black\", size = 2) +   annotate(geom = \"text\", x = 28.7, y = 44.1, label = \"Constanta\",             fontface = \"bold\", color = \"black\", size = 2) +   annotation_north_arrow(location = 'tr', which_north = 'true',                          pad_x = unit(0.05, 'in'), pad_y = unit(0.05, 'in'),                           style = north_arrow_fancy_orienteering,                          height= unit(0.5, \"cm\"),                          width= unit(0.5, \"cm\")) +    #facet_grid(month_b~year) +   theme(legend.position=\"bottom\")  facet_map_vert"},{"path":"/articles/Ukraine_ship_analysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Ukraine Ship Analysis","text":"Wellington, M., Lawes, R., Kuhnert, P. (2022) Rapid monitoring crop growth, grain exports, fire patterns Ukraine, Nature Food, Review.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Wellington. Author, maintainer. Petra Kuhnert. Contributor, thesis advisor. Roger Lawes. Thesis advisor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wellington M (2022). UkraineCrops: Ukraine-crop Analysis. R package version 0.9.0.","code":"@Manual{,   title = {UkraineCrops: Ukraine-crop Analysis},   author = {Michael Wellington},   year = {2022},   note = {R package version 0.9.0}, }"},{"path":[]},{"path":"/index.html","id":"code-and-data-used-to-analyse-ukraine-grain-supply-in-2022","dir":"","previous_headings":"","what":"Code and data used to analyse Ukraine grain supply in 2022.","title":"Ukraine-crop Analysis","text":"UkraineCrops pkgdown site vignettes.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Ukraine-crop Analysis","text":"can install UkraineCrops package using command .","code":""},{"path":"/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Ukraine-crop Analysis","text":"Michael Wellington, Australian National University & CSIRO, Email: Michael.Wellington@anu.edu.au Roger Lawes, CSIRO, Email: Roger.Lawes@csiro.au Petra Kuhnert, CSIRO Data61, Email: Petra.Kuhnert@data61.csiro.au","code":""},{"path":"/index.html","id":"about-the-package","dir":"","previous_headings":"","what":"About the Package","title":"Ukraine-crop Analysis","text":"repo contains data code used analyse Ukraine grain supply 2022 outlined Wellington et al. (2022). code appears three vignettes outline NDVI analysis code visualising cropland fire area percentages mapping shipping movements. cargo shipping data large, direct readers following download site, data can downloaded .tif format.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Ukraine-crop Analysis","text":"Wellington et al., (2022). UkraineCrop: R package housing reproducible code support paper analyses satellite images cropland Ukraine investigate progress 2022 season.","code":""},{"path":[]},{"path":"/index.html","id":"wellington-m-lawes-r-kuhnert-p-2022-rapid-monitoring-of-crop-growth-grain-exports-and-fire-patterns-in-ukraine-nature-food-under-review","dir":"","previous_headings":"","what":"Wellington, M., Lawes, R., Kuhnert, P. (2022) Rapid monitoring of crop growth, grain exports, and fire patterns in Ukraine, Nature Food, Under Review.","title":"Ukraine-crop Analysis","text":"","code":"remotes::install_github(repo = \"mickwelli/Ukraine-crops\", build_vignettes = TRUE)"},{"path":"/reference/NDVI_mod_df.html","id":null,"dir":"Reference","previous_headings":"","what":"NDVI_mod_df — NDVI_mod_df","title":"NDVI_mod_df — NDVI_mod_df","text":"NDVI MODIS data represented data frame extracted 1st January 2012 11th July 2022.","code":""},{"path":"/reference/NDVI_mod_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NDVI_mod_df — NDVI_mod_df","text":"","code":"NDVI_mod_df"},{"path":"/reference/NDVI_mod_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NDVI_mod_df — NDVI_mod_df","text":"data frame comprising 387617 rows 8 columns. date date NDVI capture x longitude y latitude NDVI Normalised Difference Vegetation Index year year NDVI captured month month NDVI captured day day month NDVI captured war factor representing pre (2012-2021) post (2022) war period","code":""},{"path":"/reference/Ukr_bnds.html","id":null,"dir":"Reference","previous_headings":"","what":"Ukr_bnds — Ukr_bnds","title":"Ukr_bnds — Ukr_bnds","text":"Ukraine shape file","code":""},{"path":"/reference/Ukr_bnds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ukr_bnds — Ukr_bnds","text":"","code":"Ukr_bnds"},{"path":"/reference/Ukr_bnds.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ukr_bnds — Ukr_bnds","text":"`sf` object containing Ukraine border.","code":""}]
